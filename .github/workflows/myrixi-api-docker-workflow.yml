name: MyRixi API Docker CI/CD

on:
  push:
    branches: [ main, master, develop ]
    paths:
      - 'MyRixi-API/**'
      - '.github/workflows/myrixi-api-docker-workflow.yml'
  pull_request:
    branches: [ main, master, develop ]
    paths:
      - 'MyRixi-API/**'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
          
      - name: Restore dependencies
        run: dotnet restore MyRixi-Api/MyRixi-Api.csproj
        
      - name: Build and test
        run: |
          dotnet build MyRixi-API/MyRixi-API.csproj --configuration Release
          dotnet test MyRixi-API/MyRixi-API.csproj --no-build --verbosity normal
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKER_REGISTRY }}/myrixi-api
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,format=short
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./MyRixi-Api/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
  deploy-to-coolify:
    needs: build-and-push
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    
    steps:
      - name: Trigger Coolify deployment
        run: |
          curl -X POST ${{ secrets.COOLIFY_WEBHOOK_URL }} \
            -H "Content-Type: application/json" \
            -d '{
              "repository": "MyRixi", 
              "branch": "${{ github.ref_name }}",
              "image": "${{ secrets.DOCKER_REGISTRY }}/myrixi-api:sha-${{ github.sha }}"
            }'
